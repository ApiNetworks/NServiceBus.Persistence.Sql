
declare @tableName nvarchar(max) = '[' + @schema + '].[' + @tablePrefix + 'theSaga]';

if not exists
(
    select *
    from sys.objects
    where
        object_id = object_id(@tableName) and
        type in ('U')
)
begin
declare @createTable nvarchar(max);
set @createTable = '
    create table ' + @tableName + '(
        [Id] [uniqueidentifier] not null primary key,
        [Originator] [nvarchar](255),
        [OriginalMessageId] [nvarchar](255),
        [Data] [nvarchar](max) not null,
        [PersistenceVersion] [nvarchar](23) not null,
        [SagaTypeVersion] [nvarchar](23) not null
    )
';
exec(@createTable);
end

if not exists
(
  select * from sys.columns
  where
    name = 'Correlation_CorrelationProperty' and
    object_id = object_id(@tableName)
)
begin
  declare @createColumn_CorrelationProperty nvarchar(max);
  set @createColumn_CorrelationProperty = '
  alter table ' + @tableName  + '
    add Correlation_CorrelationProperty nvarchar(450);
  ';
  exec(@createColumn_CorrelationProperty);
end

declare @dataType_CorrelationProperty nvarchar(max);
set @dataType_CorrelationProperty = (
  select data_type
  from information_schema.columns
  where
    table_name = ' + @tableName  + ' and
    column_name = 'Correlation_CorrelationProperty'
);
if (@dataType_CorrelationProperty <> 'nvarchar(450)')
  throw 50000, 'Incorrect data type for nvarchar(450)', 0

if not exists
(
    select *
    from sys.indexes
    where
        name = 'Index_Correlation_CorrelationProperty' and
        object_id = object_id(@tableName)
)
begin
  declare @createIndex_CorrelationProperty nvarchar(max);
  set @createIndex_CorrelationProperty = '
  create unique nonclustered index Index_Correlation_CorrelationProperty
  on ' + @tableName  + '(Correlation_CorrelationProperty)
  where Correlation_CorrelationProperty is not null;
';
  exec(@createIndex_CorrelationProperty);
end

if not exists
(
  select * from sys.columns
  where
    name = 'Correlation_TransitionalProperty' and
    object_id = object_id(@tableName)
)
begin
  declare @createColumn_TransitionalProperty nvarchar(max);
  set @createColumn_TransitionalProperty = '
  alter table ' + @tableName  + '
    add Correlation_TransitionalProperty nvarchar(450);
  ';
  exec(@createColumn_TransitionalProperty);
end

declare @dataType_TransitionalProperty nvarchar(max);
set @dataType_TransitionalProperty = (
  select data_type
  from information_schema.columns
  where
    table_name = ' + @tableName  + ' and
    column_name = 'Correlation_TransitionalProperty'
);
if (@dataType_TransitionalProperty <> 'nvarchar(450)')
  throw 50000, 'Incorrect data type for nvarchar(450)', 0

if not exists
(
    select *
    from sys.indexes
    where
        name = 'Index_Correlation_TransitionalProperty' and
        object_id = object_id(@tableName)
)
begin
  declare @createIndex_TransitionalProperty nvarchar(max);
  set @createIndex_TransitionalProperty = '
  create unique nonclustered index Index_Correlation_TransitionalProperty
  on ' + @tableName  + '(Correlation_TransitionalProperty)
  where Correlation_TransitionalProperty is not null;
';
  exec(@createIndex_TransitionalProperty);
end

declare @dropIndexQuery nvarchar(max);
select @dropIndexQuery =
(
    select 'drop index ' + ix.name + ' on ' + @tableName + '; '
    from sysindexes ix
    where
        ix.Id = (select object_id from sys.objects where name = @tableName) and
        ix.Name is not null and
        ix.Name like 'Index_Correlation_%' and
        ix.Name <> 'Index_Correlation_CorrelationProperty' and
        ix.Name <> 'Index_Correlation_TransitionalProperty'
);
exec sp_executesql @dropIndexQuery

declare @dropPropertiesQuery nvarchar(max);
select @dropPropertiesQuery =
(
    select 'alter table ' + @tableName  + ' drop column ' + col.column_name '; '
    from information_schema.columns col
    where
        col.table_name = ' + @tableName  + ' and
        col.column_name like 'Correlation_%' and
        col.column_name <> 'Correlation_CorrelationProperty' and
        col.column_name <> 'Correlation_TransitionalProperty'
);
exec sp_executesql @dropPropertiesQuery
