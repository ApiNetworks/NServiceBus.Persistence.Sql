
declare @tableName nvarchar(max) = '[' + @schema + '].[' + @endpointName + 'theSaga]';

IF NOT EXISTS
(
    SELECT *
    FROM sys.objects
    WHERE
        object_id = OBJECT_ID(@tableName) AND
        type in ('U')
)
BEGIN
DECLARE @createTable nvarchar(max);
SET @createTable = '
    CREATE TABLE ' + @tableName + '(
        [Id] [uniqueidentifier] NOT NULL PRIMARY KEY,
        [Originator] [nvarchar](255),
        [OriginalMessageId] [nvarchar](255),
        [DataXml] [xml] NOT NULL,
        [PersistenceVersion] [nvarchar](23) NOT NULL,
        [SagaTypeVersion] [nvarchar](23) NOT NULL
    )
';
exec(@createTable);
END

IF NOT EXISTS
(
  SELECT * FROM sys.columns
  WHERE
    name = 'Correlation_CorrelationProperty' AND
    object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createColumn_CorrelationProperty nvarchar(max);
  SET @createColumn_CorrelationProperty = '
  ALTER TABLE ' + @tableName  + '
    ADD Correlation_CorrelationProperty nvarchar(450);
  ';
  exec(@createColumn_CorrelationProperty);
END

DECLARE @dataType_CorrelationProperty nvarchar(max);
SET @dataType_CorrelationProperty = (
  SELECT DATA_TYPE
  FROM INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = ' + @tableName  + ' AND
    COLUMN_NAME = 'Correlation_CorrelationProperty'
);
IF (@dataType_CorrelationProperty <> 'nvarchar(450)')
  THROW 50000, 'Incorrect data type for nvarchar(450)', 0

IF NOT EXISTS
(
    SELECT *
    FROM sys.indexes
    WHERE
        name = 'Index_Correlation_CorrelationProperty' AND
        object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createIndex_CorrelationProperty nvarchar(max);
  SET @createIndex_CorrelationProperty = '
  CREATE UNIQUE NONCLUSTERED INDEX Index_Correlation_CorrelationProperty
  ON ' + @tableName  + '(Correlation_CorrelationProperty)
  WHERE Correlation_CorrelationProperty IS NOT NULL;
';
  exec(@createIndex_CorrelationProperty);
END

IF NOT EXISTS
(
  SELECT * FROM sys.columns
  WHERE
    name = 'Correlation_TransitionalProperty' AND
    object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createColumn_TransitionalProperty nvarchar(max);
  SET @createColumn_TransitionalProperty = '
  ALTER TABLE ' + @tableName  + '
    ADD Correlation_TransitionalProperty nvarchar(450);
  ';
  exec(@createColumn_TransitionalProperty);
END

DECLARE @dataType_TransitionalProperty nvarchar(max);
SET @dataType_TransitionalProperty = (
  SELECT DATA_TYPE
  FROM INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = ' + @tableName  + ' AND
    COLUMN_NAME = 'Correlation_TransitionalProperty'
);
IF (@dataType_TransitionalProperty <> 'nvarchar(450)')
  THROW 50000, 'Incorrect data type for nvarchar(450)', 0

IF NOT EXISTS
(
    SELECT *
    FROM sys.indexes
    WHERE
        name = 'Index_Correlation_TransitionalProperty' AND
        object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createIndex_TransitionalProperty nvarchar(max);
  SET @createIndex_TransitionalProperty = '
  CREATE UNIQUE NONCLUSTERED INDEX Index_Correlation_TransitionalProperty
  ON ' + @tableName  + '(Correlation_TransitionalProperty)
  WHERE Correlation_TransitionalProperty IS NOT NULL;
';
  exec(@createIndex_TransitionalProperty);
END

declare @dropIndexQuery nvarchar(max);
select @dropIndexQuery =
(
    SELECT 'DROP INDEX ' + ix.name + ' ON ' + @tableName + '; '
    FROM sysindexes ix
    WHERE
        ix.Id = (select object_id from sys.objects where name = @tableName) AND
        ix.Name IS NOT null AND
        ix.Name LIKE 'Index_Correlation_%' AND
        ix.Name <> 'Index_Correlation_CorrelationProperty' AND
        ix.Name <> 'Index_Correlation_TransitionalProperty'
);
exec sp_executesql @dropIndexQuery

declare @dropPropertiesQuery nvarchar(max);
select @dropPropertiesQuery =
(
    SELECT 'ALTER TABLE ' + @tableName  + ' DROP COLUMN ' + col.COLUMN_NAME '; '
    FROM INFORMATION_SCHEMA.COLUMNS col
    WHERE
        col.TABLE_NAME = ' + @tableName  + ' AND
        col.COLUMN_NAME LIKE 'Correlation_%' AND
        col.COLUMN_NAME <> 'Correlation_CorrelationProperty' AND
        col.COLUMN_NAME <> 'Correlation_TransitionalProperty'
);
exec sp_executesql @dropPropertiesQuery
