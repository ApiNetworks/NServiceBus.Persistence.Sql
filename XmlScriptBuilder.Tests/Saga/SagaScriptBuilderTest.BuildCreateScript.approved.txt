
declare @tableName nvarchar(max) = '[' + @schema + '].[' + @endpointName + 'theSaga]';

IF NOT EXISTS
(
    SELECT *
    FROM sys.objects
    WHERE
        object_id = OBJECT_ID(@tableName) AND
        type in ('U')
)
BEGIN
DECLARE @createTable nvarchar(max);
SET @createTable = '
    CREATE TABLE ' + @tableName + '(
        [Id] [uniqueidentifier] NOT NULL PRIMARY KEY,
        [Originator] [nvarchar](255),
        [OriginalMessageId] [nvarchar](255),
        [Data] [xml] NOT NULL,
        [PersistenceVersion] [nvarchar](23) NOT NULL,
    [SagaTypeVersion] [nvarchar](23) NOT NULL
    )
';
exec(@createTable);
END

IF NOT EXISTS
(
  SELECT * FROM sys.columns
  WHERE
    name = 'Property_Property1' AND
    object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createColumnProperty_Property1 nvarchar(max);
  SET @createColumnProperty_Property1 = '
  ALTER TABLE ' + @tableName  + '
    ADD Property_Property1 nvarchar(450);
  ';
  exec(@createColumnProperty_Property1);
END

DECLARE @dataTypeProperty_Property1 nvarchar(max);
SET @dataTypeProperty_Property1 = (
  SELECT DATA_TYPE
  FROM INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = ' + @tableName  + ' AND
    COLUMN_NAME = 'Property_Property1'
);
IF (@dataTypeProperty_Property1 <> 'nvarchar(450)')
  THROW 50000, 'Incorrect data type for nvarchar(450)', 0

IF NOT EXISTS
(
    SELECT *
    FROM sys.indexes
    WHERE
        name = 'Index_Property_Property1' AND
        object_id = OBJECT_ID(@tableName)
)
BEGIN
  DECLARE @createIndexProperty_Property1 nvarchar(max);
  SET @createIndexProperty_Property1 = '
  CREATE UNIQUE NONCLUSTERED INDEX Index_Property_Property1
  ON ' + @tableName  + '(Property_Property1)
  WHERE Property_Property1 IS NOT NULL;
';
  exec(@createIndexProperty_Property1);
END

declare @dropIndexQuery nvarchar(max);
select @dropIndexQuery =
(
    SELECT 'DROP INDEX ' + ix.name + ' ON ' + @tableName + '; '
    FROM sysindexes ix
    WHERE
        ix.Id = (select object_id from sys.objects where name = @tableName) AND
        ix.Name IS NOT null AND
        ix.Name LIKE 'PropertyIndex_%' AND
        ix.Name <> 'PropertyIndex_Index_Property_Property1' AND
        ix.Name <> 'PropertyIndex_'
    for xml path('')
);
exec sp_executesql @dropIndexQuery

declare @dropPropertiesQuery nvarchar(max);
select @dropPropertiesQuery =
(
    SELECT 'ALTER TABLE ' + @tableName  + ' DROP COLUMN ' + col.COLUMN_NAME '; '
    FROM INFORMATION_SCHEMA.COLUMNS col
    WHERE
        col.TABLE_NAME = ' + @tableName  + ' AND
        col.COLUMN_NAME LIKE 'Property_%' AND
        col.COLUMN_NAME <> 'Property_Property1' AND
        col.COLUMN_NAME <> ''
);
exec sp_executesql @dropPropertiesQuery
